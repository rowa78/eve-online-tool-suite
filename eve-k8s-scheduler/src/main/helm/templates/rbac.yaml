{{- if .Values.serviceAccount.create -}}
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: eve-k8s-scheduler-service
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["services", "pods", "configmaps", "endpoints"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [ "" ]
    #
    # at the HTTP level, the name of the resource for accessing Pod
    # objects is "pods"
    resources: [ "pods", "pods/log" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: ["batch"]
    #
    # at the HTTP level, the name of the resource for accessing Job
    # objects is "jobs"
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: eve-k8s-scheduler-service
subjects:
  # You can specify more than one "subject"
  - kind: ServiceAccount
    name: {{ include "eve-k8s-scheduler.serviceAccountName" . }} # "name" is case sensitive
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: eve-k8s-scheduler-service # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
{{- end }}